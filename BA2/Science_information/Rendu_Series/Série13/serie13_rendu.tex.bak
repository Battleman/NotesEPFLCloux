\documentclass[10p,a4paper]{scrartcl}
\input{/home/battleman/Documents/LaTeX/preambule.tex}

\usepackage{algpseudocode}
\usepackage{algorithm}
\setstretch{1}
\fancyhead[L]{Sciences de l'information } % formatage en-tête - matière
\fancyhead[C]{Série 13} 	% formatage en-tête - Série
\fancyhead[R]{Olivier Cloux}	% formatage en-tête - Nom
\setmarginsrb{20mm}{20mm}{20mm}{15mm}{-5pt}{15mm}{0pt}{8mm}
\title{	
	\normalfont \normalsize 
	\textsc{Ecole Polytechnique Fédérale de Lausanne} \\ [25pt] % Your university, school and/or department name(s)
	\textsc{Sciences de l'information}\\ [0pt] %Name of the course
	\horrule{0.5pt} \\[0.4cm] % Thin top horizontal rule
	\huge Série 13 \\ % The assignment title
	\horrule{2pt} \\[0.5cm] % Thick bottom horizontal rule
}
\date{}
\renewcommand{\(}{\left(}
\renewcommand{\)}{\right)}
\begin{document}

\maketitle
\setcounter{section}{13}
\subsection{}
\begin{enumerate}
	\item	Nous posons nos éléments tels que : $a_1 = 0,\ a_2 = 1,\ a_3 = 2,\ a_4=3,\ a_5 =4,\ a_6 = 5,\ a_7 = 6$. Depuis là, nous prenons 4 vecteur indépendants\footnote{car $k = 4$} de notre code, à savoir \[(1,0,0,0),(0,1,0,0),(0,0,1,0),(0,0,0,1)\]. Cela nous donne la matrice 
			\[G = 
			\begin{pmatrix}
				1 & 1 & 1 & 1 & 1 & 1 & 1\\
				a_1 & a_2 & a_3 & a_4 & a_5 & a_6 & a_7\\
				(a_1)^2 & (a_2)^2 & (a_3)^2 & (a_4)^2 & (a_5)^2 & (a_6)^2 & (a_7)^2\\
				(a_1)^3 & (a_2)^3 & (a_3)^3 & (a_4)^3 & (a_5)^3 & (a_6)^3 & (a_7)^3 &
			\end{pmatrix}.
			\]
			En remplaçant les éléments (toujours dans $F_7$), cela nous donne 
			\[
			G = 
			\begin{pmatrix}
				1 & 1 & 1 & 1 & 1 & 1 & 1\\
				0 & 1 & 2 & 3 & 4 & 5 & 6\\
				0 & 1 & 4 & 9 & 16 & 25 & 36\\
				0 & 1 & 8 & 27 & 64 & 125 & 216
			\end{pmatrix}
			=
			\begin{pmatrix}
				1 & 1 & 1 & 1 & 1 & 1 & 1\\
				0 & 1 & 2 & 3 & 4 & 5 & 6\\
				0 & 1 & 4 & 2 & 2 & 4 & 1\\
				0 & 1 & 1 & 6 & 1 & 6 & 6
			\end{pmatrix}
			\]
			
			
	\item	Pour trouver la forme systématique, nous devons réduire notre matrice $G$, en gardant en tête que nous travaillons dans $F_7$ (toujours pas de division, etc,...). Notre matrice $G$ peut se simplifier en quelques 8 étapes :
			\begin{align*}
				G = \begin{pmatrix}
					1 & 1 & 1 & 1 & 1 & 1 & 1\\
					0 & 1 & 2 & 3 & 4 & 5 & 6\\
					0 & 1 & 4 & 2 & 2 & 4 & 1\\
					0 & 1 & 1 & 6 & 1 & 6 & 6
				\end{pmatrix} 
				\sim 
				\begin{pmatrix}
					1 & 0 & 6 & 5 & 4 & 3 & 2\\
					0 & 1 & 2 & 3 & 4 & 5 & 6\\
					0 & 0 & 2 & 6 & 5 & 6 & 2\\
					0 & 0 & 6 & 3 & 4 & 1 & 0
				\end{pmatrix} 
				\sim
				\begin{pmatrix}
					1 & 0 & 6 & 5 & 4 & 3 & 2\\
					0 & 1 & 0 & 4 & 6 & 6 & 4\\
					0 & 0 & 1 & 3 & 6 & 3 & 1\\
					0 & 0 & 1 & 4 & 3 & 6 & 0
				\end{pmatrix}
				\\
				\sim 
				\begin{pmatrix}
					1 & 0 & 0 & 1 & 3 & 6 & 3\\
					0 & 1 & 0 & 4 & 6 & 6 & 4\\
					0 & 0 & 1 & 3 & 6 & 3 & 1\\
					0 & 0 & 0 & 1 & 4 & 3 & 6
				\end{pmatrix}
				\sim
				\begin{pmatrix}
					1 & 0 & 0 & 0 & 6 & 3 & 4\\
					0 & 1 & 0 & 0 & 4 & 1 & 1\\
					0 & 0 & 1 & 0 & 1 & 1 & 4\\
					0 & 0 & 0 & 1 & 4 & 3 & 6
				\end{pmatrix} = G' = [I_4 \ P]
			\end{align*}
			
	\item	En utilisant le théorème 13.1, nous pouvons poser que :
			\[H = [-P^T \ I_{7-4}] = 
			\begin{pmatrix}
				-6 & -4 & -1 & -4 & 1 & 0 & 0\\
				-3 & -1 & -1 & -3 & 0 & 1 & 0\\
				-4 & -1 & -4 & -6 & 0 & 0 & 1
			\end{pmatrix} \sim
			\begin{pmatrix}
			1 & 3 & 6 & 3 & 1 & 0 & 0\\
			4 & 6 & 6 & 4 & 0 & 1 & 0\\
			3 & 6 & 3 & 1 & 0 & 0 & 1
			\end{pmatrix}\]
			
	\item	Par définition, les lignes de $G$ sont des mots de code (valides), donc leur syndrome est de 0. Ainsi, \fbox{$GH^T = 0_{4\times 3}$} (la matrice nulle de taille adéquate, à savoir $4\times 3$). En abusant de paranoïa et en effectuant les calculs, nous trouvons bien cette matrice nulle.
	
	\item	Comme $C$ est un code de Reed-Solomon, il atteint la borne de Singleton. Ainsi,\\
			\fbox{$d_{min}(C) = n-k+1 = 7-4 + 1 = 4$}
			
	\item	Considérons le premier effacement comme étant $x_2$ (car seconde position), et les suivants comme $x_5$ et $x_7$. Comme il s'agit d'un mot de code valide, son syndrome doit valoir 0. Cela nous permet de définir les équations suivantes :
			\begin{align*}
			\vec{y}H^T = 0 \to 
			\left\{\begin{array}{llllllll}
				5  & +3x_2 & +30 & +12 & +x_5 & +0 & +0 & =0\\
				20 & +6x_2 & +30 & +16 & +0 & +3 & +0 & =0\\
				15 & +6x_2 & +15 & +4 & +0 & +0 & +x_7 & = 0
			\end{array}\right. \to 
			\left\{\begin{array}{l}
				3x_2 + x_5 + 5 = 0\\
				6x_2  + 6= 0 \iff 6x_2 = 1\\
				6x_2 + x_7 + 6 = 0
			\end{array}\right.
			\\
			\to
			\left\{
			\begin{array}{l}
				x_5 = 5\\
				x_2 = 6\\
				x_7 = 0
			\end{array}\right.
			\end{align*}
			En remplaçant ces corrections dans notre mot, cela nous donne
			\begin{align*}
				\fbox{$\vec{y} = (5,5,5,4,5,3,0)$}
			\end{align*}
			
	\item	Le syndrome se trouve comme d'habitude, avec $\vec{z}H^T$, ce qui nous donne \fbox{$(0,1,0)$}. Ainsi, pour de corriger l'erreur, nous devons trouver un moyen de modifier le mot afin de ne toucher que la seconde partie du syndrome, mais sans toucher à la première et troisième partie. Nous nous rendons vite compte que nous pouvons faire ça de manière simple, en modifiant une des trois dernières coordonnées du mot (à cause de la matrice identité au bas de $H^T$). Pour cela, il suffit de modifier l'avant dernière coordonnée de $\vec{z}$, en changeant le 0 en 6, afin d'ajouter 6 au syndrome, ce qui aura pour effet de le modifier en (0,7,0) et donc en (0,0,0). Notre mot ainsi corrigé devient \fbox{$(2,2,0,4,6,6$)}
	
	\item	Le meilleur moyen de corriger une erreur simple de manière informatique (car nous ne pouvons pas raisonner comme précédemment pour une erreur quelconque) est de tester tous les mots à distance 1 de notre mot. Cela se fait grâce à l'algorithme suivant : 
	\newpage ~
			\begin{algorithm}
				\caption{correcteur.c}
				\label{correcteur}
				\begin{algorithmic}
					\If{$(yH^T = 0)$}
						\State \Return $y$							$\Comment{\text{Déjà s'assurer que le mot donné est correcte ou non}}$
					\Else	
						\For{$(i = 1, i<=7, i++)$}					$\Comment{\text{Afin d'inspecter indépendamment les 7 coordonnées de y}}$
							\For{$(j = 1, j<=7, j++)$}				$\Comment{\text{Afin d'ajouter 1 x7, et faire le tour du modulo}}$
								\State $Modulo(y[i] + 1, 7)$		$\Comment{\text{La fonction Modulo(a,b) retourne $a \mod b$}}$
								\If{$(yH^T = 0)$}
									\State \Return $y$
								\EndIf
							\EndFor					
						\EndFor
						\State \Return noCorrectionPossible			$\Comment{\text{Sans retour avant, cela signifie que le mot ne peut pas être corrigé}}$
					\EndIf
				\end{algorithmic}
			\end{algorithm}
			
\end{enumerate}
\end{document}